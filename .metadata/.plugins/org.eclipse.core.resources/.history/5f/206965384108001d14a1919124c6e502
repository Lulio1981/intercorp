package com.intercorp.demo.utils;

import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.GregorianCalendar;

import com.intercorp.demo.constants.Constants;

public class UtilsDate {
	
	public double yearsDecimalPart () {
		int partYearsDecimal = (int) (Constants.LIFE_EXPECTANCY%1);
		double months  = partYearsDecimal*12;
		return months;
	}
	
	public double daysQuanty (Date dateOfBirth) {
		dateOfBirth.get
		LocalDate date = dateOfBirth.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
		double monthPartDecimal = yearsDecimalPart()%1;
		double days = monthPartDecimal*30;
		return days;
	}
	
	public static int numeroDeDiasMes(int mes){
		 
	    int numeroDias=-1;
	 
	        switch(mes){
	            case 1:
	            case 3:
	            case 5:
	            case 7:
	            case 8:
	            case 10:
	            case 12:
	                numeroDias=31;
	                break;
	            case 4:
	            case 6:
	            case 9:
	            case 11:
	                numeroDias=30;
	                break;
	            case 2:
	 
	                Date anioActual=new Date();
	                if(esBisiesto(1900 + (int) (Constants.LIFE_EXPECTANCY%1))){
	                    numeroDias=29;
	                }else{
	                    numeroDias=28;
	                }
	                break;
	 
	        }
	 
	    return numeroDias;
	}
	
	public static boolean esBisiesto(int anio) {
		 
	    GregorianCalendar calendar = new GregorianCalendar();
	    boolean esBisiesto = false;
	    if (calendar.isLeapYear(anio)) {
	        esBisiesto = true;
	    }
	    return esBisiesto;
	}

}
